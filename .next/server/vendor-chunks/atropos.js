"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/atropos";
exports.ids = ["vendor-chunks/atropos"];
exports.modules = {

/***/ "(rsc)/./node_modules/atropos/atropos.css":
/*!******************************************!*\
  !*** ./node_modules/atropos/atropos.css ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"52691fd452e5\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXRyb3Bvcy9hdHJvcG9zLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLEtBQVUsRUFBRSxFQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvYXRyb3Bvcy9hdHJvcG9zLmNzcz82NGRhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiNTI2OTFmZDQ1MmU1XCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/atropos/atropos.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/atropos/atropos-react.mjs":
/*!************************************************!*\
  !*** ./node_modules/atropos/atropos-react.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Atropos: () => (/* binding */ Atropos),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _atropos_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./atropos.mjs */ \"(ssr)/./node_modules/atropos/atropos.mjs\");\n/**\n * Atropos React 2.0.2\n * Touch-friendly 3D parallax hover effects\n * https://atroposjs.com\n *\n * Copyright 2021-2023 \n *\n * Released under the MIT License\n *\n * Released on: July 4, 2023\n */ var _excluded = [\n    \"component\",\n    \"children\",\n    \"rootChildren\",\n    \"scaleChildren\",\n    \"rotateChildren\",\n    \"className\",\n    \"scaleClassName\",\n    \"rotateClassName\",\n    \"innerClassName\"\n];\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n\n// eslint-disable-next-line\n\nvar paramsKeys = [\n    \"eventsEl\",\n    \"alwaysActive\",\n    \"activeOffset\",\n    \"shadowOffset\",\n    \"shadowScale\",\n    \"duration\",\n    \"rotate\",\n    \"rotateTouch\",\n    \"rotateXMax\",\n    \"rotateYMax\",\n    \"rotateXInvert\",\n    \"rotateYInvert\",\n    \"stretchX\",\n    \"stretchY\",\n    \"stretchZ\",\n    \"commonOrigin\",\n    \"shadow\",\n    \"highlight\",\n    \"onEnter\",\n    \"onLeave\",\n    \"onRotate\"\n];\nvar removeParamsKeys = function removeParamsKeys(obj) {\n    var result = {};\n    Object.keys(obj).forEach(function(key) {\n        if (!paramsKeys.includes(key)) result[key] = obj[key];\n    });\n    return result;\n};\nvar extractParamsKeys = function extractParamsKeys(obj) {\n    var result = {};\n    Object.keys(obj).forEach(function(key) {\n        if (paramsKeys.includes(key)) result[key] = obj[key];\n    });\n    return result;\n};\nfunction Atropos(props) {\n    var _props$component = props.component, component = _props$component === void 0 ? \"div\" : _props$component, children = props.children, rootChildren = props.rootChildren, scaleChildren = props.scaleChildren, rotateChildren = props.rotateChildren, _props$className = props.className, className = _props$className === void 0 ? \"\" : _props$className, _props$scaleClassName = props.scaleClassName, scaleClassName = _props$scaleClassName === void 0 ? \"\" : _props$scaleClassName, _props$rotateClassNam = props.rotateClassName, rotateClassName = _props$rotateClassNam === void 0 ? \"\" : _props$rotateClassNam, _props$innerClassName = props.innerClassName, innerClassName = _props$innerClassName === void 0 ? \"\" : _props$innerClassName, rest = _objectWithoutPropertiesLoose(props, _excluded);\n    var elRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var atroposRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var Component = component;\n    var cls = function cls() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return args.filter(function(c) {\n            return !!c;\n        }).join(\" \");\n    };\n    var init = function init() {\n        atroposRef.current = (0,_atropos_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_extends({\n            el: elRef.current\n        }, extractParamsKeys(props)));\n    };\n    var destroy = function destroy() {\n        if (atroposRef.current) {\n            atroposRef.current.destroy();\n            atroposRef.current = null;\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        if (elRef.current) {\n            init();\n        }\n        return function() {\n            destroy();\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        if (atroposRef.current) {\n            atroposRef.current.params.onEnter = props.onEnter;\n            atroposRef.current.params.onLeave = props.onLeave;\n            atroposRef.current.params.onRotate = props.onRotate;\n        }\n        return function() {\n            if (atroposRef.current) {\n                atroposRef.current.params.onEnter = null;\n                atroposRef.current.params.onLeave = null;\n                atroposRef.current.params.onRotate = null;\n            }\n        };\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, _extends({\n        className: cls(\"atropos\", className)\n    }, removeParamsKeys(rest), {\n        ref: elRef\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: cls(\"atropos-scale\", scaleClassName)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: cls(\"atropos-rotate\", rotateClassName)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: cls(\"atropos-inner\", innerClassName)\n    }, children, (props.highlight || typeof props.highlight === \"undefined\") && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"atropos-highlight\"\n    })), rotateChildren, (props.shadow || typeof props.shadow === \"undefined\") && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"atropos-shadow\"\n    })), scaleChildren), rootChildren);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Atropos);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXRyb3Bvcy9hdHJvcG9zLXJlYWN0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Q0FVQyxHQUVELElBQUlBLFlBQVk7SUFBQztJQUFhO0lBQVk7SUFBZ0I7SUFBaUI7SUFBa0I7SUFBYTtJQUFrQjtJQUFtQjtDQUFpQjtBQUNoSyxTQUFTQztJQUFhQSxXQUFXQyxPQUFPQyxNQUFNLEdBQUdELE9BQU9DLE1BQU0sQ0FBQ0MsSUFBSSxLQUFLLFNBQVVDLE1BQU07UUFBSSxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUMsVUFBVUMsTUFBTSxFQUFFRixJQUFLO1lBQUUsSUFBSUcsU0FBU0YsU0FBUyxDQUFDRCxFQUFFO1lBQUUsSUFBSyxJQUFJSSxPQUFPRCxPQUFRO2dCQUFFLElBQUlQLE9BQU9TLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFFBQVFDLE1BQU07b0JBQUVMLE1BQU0sQ0FBQ0ssSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7Z0JBQUU7WUFBRTtRQUFFO1FBQUUsT0FBT0w7SUFBUTtJQUFHLE9BQU9KLFNBQVNhLEtBQUssQ0FBQyxJQUFJLEVBQUVQO0FBQVk7QUFDbFYsU0FBU1EsOEJBQThCTixNQUFNLEVBQUVPLFFBQVE7SUFBSSxJQUFJUCxVQUFVLE1BQU0sT0FBTyxDQUFDO0lBQUcsSUFBSUosU0FBUyxDQUFDO0lBQUcsSUFBSVksYUFBYWYsT0FBT2dCLElBQUksQ0FBQ1Q7SUFBUyxJQUFJQyxLQUFLSjtJQUFHLElBQUtBLElBQUksR0FBR0EsSUFBSVcsV0FBV1QsTUFBTSxFQUFFRixJQUFLO1FBQUVJLE1BQU1PLFVBQVUsQ0FBQ1gsRUFBRTtRQUFFLElBQUlVLFNBQVNHLE9BQU8sQ0FBQ1QsUUFBUSxHQUFHO1FBQVVMLE1BQU0sQ0FBQ0ssSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7SUFBRTtJQUFFLE9BQU9MO0FBQVE7QUFDalE7QUFDakQsMkJBQTJCO0FBQ2E7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O0FBQ3ZCO0FBQ0EsaUVBQWVMLE9BQU9BLEVBQUM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvYXRyb3Bvcy9hdHJvcG9zLXJlYWN0Lm1qcz8yODg3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQXRyb3BvcyBSZWFjdCAyLjAuMlxuICogVG91Y2gtZnJpZW5kbHkgM0QgcGFyYWxsYXggaG92ZXIgZWZmZWN0c1xuICogaHR0cHM6Ly9hdHJvcG9zanMuY29tXG4gKlxuICogQ29weXJpZ2h0IDIwMjEtMjAyMyBcbiAqXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2VcbiAqXG4gKiBSZWxlYXNlZCBvbjogSnVseSA0LCAyMDIzXG4gKi9cblxudmFyIF9leGNsdWRlZCA9IFtcImNvbXBvbmVudFwiLCBcImNoaWxkcmVuXCIsIFwicm9vdENoaWxkcmVuXCIsIFwic2NhbGVDaGlsZHJlblwiLCBcInJvdGF0ZUNoaWxkcmVuXCIsIFwiY2xhc3NOYW1lXCIsIFwic2NhbGVDbGFzc05hbWVcIiwgXCJyb3RhdGVDbGFzc05hbWVcIiwgXCJpbm5lckNsYXNzTmFtZVwiXTtcbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gPyBPYmplY3QuYXNzaWduLmJpbmQoKSA6IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkgeyBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsgdmFyIHRhcmdldCA9IHt9OyB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7IHZhciBrZXksIGk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZUtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gcmV0dXJuIHRhcmdldDsgfVxuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5pbXBvcnQgQXRyb3Bvc0NvcmUgZnJvbSAnLi9hdHJvcG9zLm1qcyc7XG52YXIgcGFyYW1zS2V5cyA9IFsnZXZlbnRzRWwnLCAnYWx3YXlzQWN0aXZlJywgJ2FjdGl2ZU9mZnNldCcsICdzaGFkb3dPZmZzZXQnLCAnc2hhZG93U2NhbGUnLCAnZHVyYXRpb24nLCAncm90YXRlJywgJ3JvdGF0ZVRvdWNoJywgJ3JvdGF0ZVhNYXgnLCAncm90YXRlWU1heCcsICdyb3RhdGVYSW52ZXJ0JywgJ3JvdGF0ZVlJbnZlcnQnLCAnc3RyZXRjaFgnLCAnc3RyZXRjaFknLCAnc3RyZXRjaFonLCAnY29tbW9uT3JpZ2luJywgJ3NoYWRvdycsICdoaWdobGlnaHQnLCAnb25FbnRlcicsICdvbkxlYXZlJywgJ29uUm90YXRlJ107XG52YXIgcmVtb3ZlUGFyYW1zS2V5cyA9IGZ1bmN0aW9uIHJlbW92ZVBhcmFtc0tleXMob2JqKSB7XG4gIHZhciByZXN1bHQgPSB7fTtcbiAgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAoIXBhcmFtc0tleXMuaW5jbHVkZXMoa2V5KSkgcmVzdWx0W2tleV0gPSBvYmpba2V5XTtcbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59O1xudmFyIGV4dHJhY3RQYXJhbXNLZXlzID0gZnVuY3Rpb24gZXh0cmFjdFBhcmFtc0tleXMob2JqKSB7XG4gIHZhciByZXN1bHQgPSB7fTtcbiAgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAocGFyYW1zS2V5cy5pbmNsdWRlcyhrZXkpKSByZXN1bHRba2V5XSA9IG9ialtrZXldO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5mdW5jdGlvbiBBdHJvcG9zKHByb3BzKSB7XG4gIHZhciBfcHJvcHMkY29tcG9uZW50ID0gcHJvcHMuY29tcG9uZW50LFxuICAgIGNvbXBvbmVudCA9IF9wcm9wcyRjb21wb25lbnQgPT09IHZvaWQgMCA/ICdkaXYnIDogX3Byb3BzJGNvbXBvbmVudCxcbiAgICBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLFxuICAgIHJvb3RDaGlsZHJlbiA9IHByb3BzLnJvb3RDaGlsZHJlbixcbiAgICBzY2FsZUNoaWxkcmVuID0gcHJvcHMuc2NhbGVDaGlsZHJlbixcbiAgICByb3RhdGVDaGlsZHJlbiA9IHByb3BzLnJvdGF0ZUNoaWxkcmVuLFxuICAgIF9wcm9wcyRjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgY2xhc3NOYW1lID0gX3Byb3BzJGNsYXNzTmFtZSA9PT0gdm9pZCAwID8gJycgOiBfcHJvcHMkY2xhc3NOYW1lLFxuICAgIF9wcm9wcyRzY2FsZUNsYXNzTmFtZSA9IHByb3BzLnNjYWxlQ2xhc3NOYW1lLFxuICAgIHNjYWxlQ2xhc3NOYW1lID0gX3Byb3BzJHNjYWxlQ2xhc3NOYW1lID09PSB2b2lkIDAgPyAnJyA6IF9wcm9wcyRzY2FsZUNsYXNzTmFtZSxcbiAgICBfcHJvcHMkcm90YXRlQ2xhc3NOYW0gPSBwcm9wcy5yb3RhdGVDbGFzc05hbWUsXG4gICAgcm90YXRlQ2xhc3NOYW1lID0gX3Byb3BzJHJvdGF0ZUNsYXNzTmFtID09PSB2b2lkIDAgPyAnJyA6IF9wcm9wcyRyb3RhdGVDbGFzc05hbSxcbiAgICBfcHJvcHMkaW5uZXJDbGFzc05hbWUgPSBwcm9wcy5pbm5lckNsYXNzTmFtZSxcbiAgICBpbm5lckNsYXNzTmFtZSA9IF9wcm9wcyRpbm5lckNsYXNzTmFtZSA9PT0gdm9pZCAwID8gJycgOiBfcHJvcHMkaW5uZXJDbGFzc05hbWUsXG4gICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuICB2YXIgZWxSZWYgPSB1c2VSZWYobnVsbCk7XG4gIHZhciBhdHJvcG9zUmVmID0gdXNlUmVmKG51bGwpO1xuICB2YXIgQ29tcG9uZW50ID0gY29tcG9uZW50O1xuICB2YXIgY2xzID0gZnVuY3Rpb24gY2xzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG4gICAgcmV0dXJuIGFyZ3MuZmlsdGVyKGZ1bmN0aW9uIChjKSB7XG4gICAgICByZXR1cm4gISFjO1xuICAgIH0pLmpvaW4oJyAnKTtcbiAgfTtcbiAgdmFyIGluaXQgPSBmdW5jdGlvbiBpbml0KCkge1xuICAgIGF0cm9wb3NSZWYuY3VycmVudCA9IEF0cm9wb3NDb3JlKF9leHRlbmRzKHtcbiAgICAgIGVsOiBlbFJlZi5jdXJyZW50XG4gICAgfSwgZXh0cmFjdFBhcmFtc0tleXMocHJvcHMpKSk7XG4gIH07XG4gIHZhciBkZXN0cm95ID0gZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICBpZiAoYXRyb3Bvc1JlZi5jdXJyZW50KSB7XG4gICAgICBhdHJvcG9zUmVmLmN1cnJlbnQuZGVzdHJveSgpO1xuICAgICAgYXRyb3Bvc1JlZi5jdXJyZW50ID0gbnVsbDtcbiAgICB9XG4gIH07XG4gIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGVsUmVmLmN1cnJlbnQpIHtcbiAgICAgIGluaXQoKTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGRlc3Ryb3koKTtcbiAgICB9O1xuICB9LCBbXSk7XG4gIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGF0cm9wb3NSZWYuY3VycmVudCkge1xuICAgICAgYXRyb3Bvc1JlZi5jdXJyZW50LnBhcmFtcy5vbkVudGVyID0gcHJvcHMub25FbnRlcjtcbiAgICAgIGF0cm9wb3NSZWYuY3VycmVudC5wYXJhbXMub25MZWF2ZSA9IHByb3BzLm9uTGVhdmU7XG4gICAgICBhdHJvcG9zUmVmLmN1cnJlbnQucGFyYW1zLm9uUm90YXRlID0gcHJvcHMub25Sb3RhdGU7XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoYXRyb3Bvc1JlZi5jdXJyZW50KSB7XG4gICAgICAgIGF0cm9wb3NSZWYuY3VycmVudC5wYXJhbXMub25FbnRlciA9IG51bGw7XG4gICAgICAgIGF0cm9wb3NSZWYuY3VycmVudC5wYXJhbXMub25MZWF2ZSA9IG51bGw7XG4gICAgICAgIGF0cm9wb3NSZWYuY3VycmVudC5wYXJhbXMub25Sb3RhdGUgPSBudWxsO1xuICAgICAgfVxuICAgIH07XG4gIH0pO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7XG4gICAgY2xhc3NOYW1lOiBjbHMoJ2F0cm9wb3MnLCBjbGFzc05hbWUpXG4gIH0sIHJlbW92ZVBhcmFtc0tleXMocmVzdCksIHtcbiAgICByZWY6IGVsUmVmXG4gIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgIGNsYXNzTmFtZTogY2xzKCdhdHJvcG9zLXNjYWxlJywgc2NhbGVDbGFzc05hbWUpXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7XG4gICAgY2xhc3NOYW1lOiBjbHMoJ2F0cm9wb3Mtcm90YXRlJywgcm90YXRlQ2xhc3NOYW1lKVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgIGNsYXNzTmFtZTogY2xzKCdhdHJvcG9zLWlubmVyJywgaW5uZXJDbGFzc05hbWUpXG4gIH0sIGNoaWxkcmVuLCAocHJvcHMuaGlnaGxpZ2h0IHx8IHR5cGVvZiBwcm9wcy5oaWdobGlnaHQgPT09ICd1bmRlZmluZWQnKSAmJiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgIGNsYXNzTmFtZTogXCJhdHJvcG9zLWhpZ2hsaWdodFwiXG4gIH0pKSwgcm90YXRlQ2hpbGRyZW4sIChwcm9wcy5zaGFkb3cgfHwgdHlwZW9mIHByb3BzLnNoYWRvdyA9PT0gJ3VuZGVmaW5lZCcpICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImF0cm9wb3Mtc2hhZG93XCJcbiAgfSkpLCBzY2FsZUNoaWxkcmVuKSwgcm9vdENoaWxkcmVuKTtcbn1cbmV4cG9ydCBkZWZhdWx0IEF0cm9wb3M7XG5leHBvcnQgeyBBdHJvcG9zIH07XG4iXSwibmFtZXMiOlsiX2V4Y2x1ZGVkIiwiX2V4dGVuZHMiLCJPYmplY3QiLCJhc3NpZ24iLCJiaW5kIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJrZXlzIiwiaW5kZXhPZiIsIlJlYWN0IiwidXNlRWZmZWN0IiwidXNlUmVmIiwiQXRyb3Bvc0NvcmUiLCJwYXJhbXNLZXlzIiwicmVtb3ZlUGFyYW1zS2V5cyIsIm9iaiIsInJlc3VsdCIsImZvckVhY2giLCJpbmNsdWRlcyIsImV4dHJhY3RQYXJhbXNLZXlzIiwiQXRyb3BvcyIsInByb3BzIiwiX3Byb3BzJGNvbXBvbmVudCIsImNvbXBvbmVudCIsImNoaWxkcmVuIiwicm9vdENoaWxkcmVuIiwic2NhbGVDaGlsZHJlbiIsInJvdGF0ZUNoaWxkcmVuIiwiX3Byb3BzJGNsYXNzTmFtZSIsImNsYXNzTmFtZSIsIl9wcm9wcyRzY2FsZUNsYXNzTmFtZSIsInNjYWxlQ2xhc3NOYW1lIiwiX3Byb3BzJHJvdGF0ZUNsYXNzTmFtIiwicm90YXRlQ2xhc3NOYW1lIiwiX3Byb3BzJGlubmVyQ2xhc3NOYW1lIiwiaW5uZXJDbGFzc05hbWUiLCJyZXN0IiwiZWxSZWYiLCJhdHJvcG9zUmVmIiwiQ29tcG9uZW50IiwiY2xzIiwiX2xlbiIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJmaWx0ZXIiLCJjIiwiam9pbiIsImluaXQiLCJjdXJyZW50IiwiZWwiLCJkZXN0cm95IiwicGFyYW1zIiwib25FbnRlciIsIm9uTGVhdmUiLCJvblJvdGF0ZSIsImNyZWF0ZUVsZW1lbnQiLCJyZWYiLCJoaWdobGlnaHQiLCJzaGFkb3ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/atropos/atropos-react.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/atropos/atropos.mjs":
/*!******************************************!*\
  !*** ./node_modules/atropos/atropos.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Atropos: () => (/* binding */ Atropos),\n/* harmony export */   \"default\": () => (/* binding */ Atropos),\n/* harmony export */   defaults: () => (/* binding */ defaults)\n/* harmony export */ });\n/**\n * Atropos 2.0.2\n * Touch-friendly 3D parallax hover effects\n * https://atroposjs.com\n *\n * Copyright 2021-2023 \n *\n * Released under the MIT License\n *\n * Released on: July 4, 2023\n */ function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\n/* eslint-disable no-restricted-globals */ var $ = function $(el, sel) {\n    return el.querySelector(sel);\n};\nvar $$ = function $$(el, sel) {\n    return el.querySelectorAll(sel);\n};\nvar removeUndefinedProps = function removeUndefinedProps(obj) {\n    if (obj === void 0) {\n        obj = {};\n    }\n    var result = {};\n    Object.keys(obj).forEach(function(key) {\n        if (typeof obj[key] !== \"undefined\") result[key] = obj[key];\n    });\n    return result;\n};\nvar defaults = {\n    alwaysActive: false,\n    activeOffset: 50,\n    shadowOffset: 50,\n    shadowScale: 1,\n    duration: 300,\n    rotate: true,\n    rotateTouch: true,\n    rotateXMax: 15,\n    rotateYMax: 15,\n    rotateXInvert: false,\n    rotateYInvert: false,\n    stretchX: 0,\n    stretchY: 0,\n    stretchZ: 0,\n    commonOrigin: true,\n    shadow: true,\n    highlight: true\n};\nfunction Atropos(originalParams) {\n    if (originalParams === void 0) {\n        originalParams = {};\n    }\n    var _originalParams = originalParams, el = _originalParams.el, eventsEl = _originalParams.eventsEl;\n    var _originalParams2 = originalParams, isComponent = _originalParams2.isComponent;\n    var childrenRootEl;\n    var self = {\n        __atropos__: true,\n        params: _extends({}, defaults, {\n            onEnter: null,\n            onLeave: null,\n            onRotate: null\n        }, removeUndefinedProps(originalParams || {})),\n        destroyed: false,\n        isActive: false\n    };\n    var params = self.params;\n    var rotateEl;\n    var scaleEl;\n    var innerEl;\n    var elBoundingClientRect;\n    var eventsElBoundingClientRect;\n    var shadowEl;\n    var highlightEl;\n    var isScrolling;\n    var clientXStart;\n    var clientYStart;\n    var queue = [];\n    var queueFrameId;\n    var purgeQueue = function purgeQueue() {\n        queueFrameId = requestAnimationFrame(function() {\n            queue.forEach(function(data) {\n                if (typeof data === \"function\") {\n                    data();\n                } else {\n                    var element = data.element, prop = data.prop, value = data.value;\n                    element.style[prop] = value;\n                }\n            });\n            queue.splice(0, queue.length);\n            purgeQueue();\n        });\n    };\n    purgeQueue();\n    var $setDuration = function $setDuration(element, value) {\n        queue.push({\n            element: element,\n            prop: \"transitionDuration\",\n            value: value\n        });\n    };\n    var $setEasing = function $setEasing(element, value) {\n        queue.push({\n            element: element,\n            prop: \"transitionTimingFunction\",\n            value: value\n        });\n    };\n    var $setTransform = function $setTransform(element, value) {\n        queue.push({\n            element: element,\n            prop: \"transform\",\n            value: value\n        });\n    };\n    var $setOpacity = function $setOpacity(element, value) {\n        queue.push({\n            element: element,\n            prop: \"opacity\",\n            value: value\n        });\n    };\n    var $setOrigin = function $setOrigin(element, value) {\n        queue.push({\n            element: element,\n            prop: \"transformOrigin\",\n            value: value\n        });\n    };\n    var $on = function $on(element, event, handler, props) {\n        return element.addEventListener(event, handler, props);\n    };\n    var $off = function $off(element, event, handler, props) {\n        return element.removeEventListener(event, handler, props);\n    };\n    var createShadow = function createShadow() {\n        var created;\n        shadowEl = $(el, \".atropos-shadow\");\n        if (!shadowEl) {\n            shadowEl = document.createElement(\"span\");\n            shadowEl.classList.add(\"atropos-shadow\");\n            created = true;\n        }\n        $setTransform(shadowEl, \"translate3d(0,0,-\" + params.shadowOffset + \"px) scale(\" + params.shadowScale + \")\");\n        if (created) {\n            rotateEl.appendChild(shadowEl);\n        }\n    };\n    var createHighlight = function createHighlight() {\n        var created;\n        highlightEl = $(el, \".atropos-highlight\");\n        if (!highlightEl) {\n            highlightEl = document.createElement(\"span\");\n            highlightEl.classList.add(\"atropos-highlight\");\n            created = true;\n        }\n        $setTransform(highlightEl, \"translate3d(0,0,0)\");\n        if (created) {\n            innerEl.appendChild(highlightEl);\n        }\n    };\n    var setChildrenOffset = function setChildrenOffset(_ref) {\n        var _ref$rotateXPercentag = _ref.rotateXPercentage, rotateXPercentage = _ref$rotateXPercentag === void 0 ? 0 : _ref$rotateXPercentag, _ref$rotateYPercentag = _ref.rotateYPercentage, rotateYPercentage = _ref$rotateYPercentag === void 0 ? 0 : _ref$rotateYPercentag, duration = _ref.duration, opacityOnly = _ref.opacityOnly, easeOut = _ref.easeOut;\n        var getOpacity = function getOpacity(element) {\n            if (element.dataset.atroposOpacity && typeof element.dataset.atroposOpacity === \"string\") {\n                return element.dataset.atroposOpacity.split(\";\").map(function(v) {\n                    return parseFloat(v);\n                });\n            }\n            return undefined;\n        };\n        $$(childrenRootEl, \"[data-atropos-offset], [data-atropos-opacity]\").forEach(function(childEl) {\n            $setDuration(childEl, duration);\n            $setEasing(childEl, easeOut ? \"ease-out\" : \"\");\n            var elementOpacity = getOpacity(childEl);\n            if (rotateXPercentage === 0 && rotateYPercentage === 0) {\n                if (!opacityOnly) $setTransform(childEl, \"translate3d(0, 0, 0)\");\n                if (elementOpacity) $setOpacity(childEl, elementOpacity[0]);\n            } else {\n                var childElOffset = parseFloat(childEl.dataset.atroposOffset) / 100;\n                if (!Number.isNaN(childElOffset) && !opacityOnly) {\n                    $setTransform(childEl, \"translate3d(\" + -rotateYPercentage * -childElOffset + \"%, \" + rotateXPercentage * -childElOffset + \"%, 0)\");\n                }\n                if (elementOpacity) {\n                    var min = elementOpacity[0], max = elementOpacity[1];\n                    var rotatePercentage = Math.max(Math.abs(rotateXPercentage), Math.abs(rotateYPercentage));\n                    $setOpacity(childEl, min + (max - min) * rotatePercentage / 100);\n                }\n            }\n        });\n    };\n    var setElements = function setElements(clientX, clientY) {\n        var isMultiple = el !== eventsEl;\n        if (!elBoundingClientRect) {\n            elBoundingClientRect = el.getBoundingClientRect();\n        }\n        if (isMultiple && !eventsElBoundingClientRect) {\n            eventsElBoundingClientRect = eventsEl.getBoundingClientRect();\n        }\n        if (typeof clientX === \"undefined\" && typeof clientY === \"undefined\") {\n            var rect = isMultiple ? eventsElBoundingClientRect : elBoundingClientRect;\n            clientX = rect.left + rect.width / 2;\n            clientY = rect.top + rect.height / 2;\n        }\n        var rotateX = 0;\n        var rotateY = 0;\n        var _elBoundingClientRect = elBoundingClientRect, top = _elBoundingClientRect.top, left = _elBoundingClientRect.left, width = _elBoundingClientRect.width, height = _elBoundingClientRect.height;\n        var transformOrigin;\n        if (!isMultiple) {\n            var centerX = width / 2;\n            var centerY = height / 2;\n            var coordX = clientX - left;\n            var coordY = clientY - top;\n            rotateY = params.rotateYMax * (coordX - centerX) / (width / 2) * -1;\n            rotateX = params.rotateXMax * (coordY - centerY) / (height / 2);\n        } else {\n            var _eventsElBoundingClie = eventsElBoundingClientRect, parentTop = _eventsElBoundingClie.top, parentLeft = _eventsElBoundingClie.left, parentWidth = _eventsElBoundingClie.width, parentHeight = _eventsElBoundingClie.height;\n            var offsetLeft = left - parentLeft;\n            var offsetTop = top - parentTop;\n            var _centerX = width / 2 + offsetLeft;\n            var _centerY = height / 2 + offsetTop;\n            var _coordX = clientX - parentLeft;\n            var _coordY = clientY - parentTop;\n            rotateY = params.rotateYMax * (_coordX - _centerX) / (parentWidth - width / 2) * -1;\n            rotateX = params.rotateXMax * (_coordY - _centerY) / (parentHeight - height / 2);\n            transformOrigin = clientX - left + \"px \" + (clientY - top) + \"px\";\n        }\n        rotateX = Math.min(Math.max(-rotateX, -params.rotateXMax), params.rotateXMax);\n        if (params.rotateXInvert) rotateX = -rotateX;\n        rotateY = Math.min(Math.max(-rotateY, -params.rotateYMax), params.rotateYMax);\n        if (params.rotateYInvert) rotateY = -rotateY;\n        var rotateXPercentage = rotateX / params.rotateXMax * 100;\n        var rotateYPercentage = rotateY / params.rotateYMax * 100;\n        var stretchX = (isMultiple ? rotateYPercentage / 100 * params.stretchX : 0) * (params.rotateYInvert ? -1 : 1);\n        var stretchY = (isMultiple ? rotateXPercentage / 100 * params.stretchY : 0) * (params.rotateXInvert ? -1 : 1);\n        var stretchZ = isMultiple ? Math.max(Math.abs(rotateXPercentage), Math.abs(rotateYPercentage)) / 100 * params.stretchZ : 0;\n        $setTransform(rotateEl, \"translate3d(\" + stretchX + \"%, \" + -stretchY + \"%, \" + -stretchZ + \"px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\");\n        if (transformOrigin && params.commonOrigin) {\n            $setOrigin(rotateEl, transformOrigin);\n        }\n        if (highlightEl) {\n            $setDuration(highlightEl, params.duration + \"ms\");\n            $setEasing(highlightEl, \"ease-out\");\n            $setTransform(highlightEl, \"translate3d(\" + -rotateYPercentage * 0.25 + \"%, \" + rotateXPercentage * 0.25 + \"%, 0)\");\n            $setOpacity(highlightEl, Math.max(Math.abs(rotateXPercentage), Math.abs(rotateYPercentage)) / 100);\n        }\n        setChildrenOffset({\n            rotateXPercentage: rotateXPercentage,\n            rotateYPercentage: rotateYPercentage,\n            duration: params.duration + \"ms\",\n            easeOut: true\n        });\n        if (typeof params.onRotate === \"function\") params.onRotate(rotateX, rotateY);\n    };\n    var activate = function activate() {\n        queue.push(function() {\n            return el.classList.add(\"atropos-active\");\n        });\n        $setDuration(rotateEl, params.duration + \"ms\");\n        $setEasing(rotateEl, \"ease-out\");\n        $setTransform(scaleEl, \"translate3d(0,0, \" + params.activeOffset + \"px)\");\n        $setDuration(scaleEl, params.duration + \"ms\");\n        $setEasing(scaleEl, \"ease-out\");\n        if (shadowEl) {\n            $setDuration(shadowEl, params.duration + \"ms\");\n            $setEasing(shadowEl, \"ease-out\");\n        }\n        self.isActive = true;\n    };\n    var onPointerEnter = function onPointerEnter(e) {\n        isScrolling = undefined;\n        if (e.type === \"pointerdown\" && e.pointerType === \"mouse\") return;\n        if (e.type === \"pointerenter\" && e.pointerType !== \"mouse\") return;\n        if (e.type === \"pointerdown\") {\n            e.preventDefault();\n        }\n        clientXStart = e.clientX;\n        clientYStart = e.clientY;\n        if (params.alwaysActive) {\n            elBoundingClientRect = undefined;\n            eventsElBoundingClientRect = undefined;\n            return;\n        }\n        activate();\n        if (typeof params.onEnter === \"function\") params.onEnter();\n    };\n    var onTouchMove = function onTouchMove(e) {\n        if (isScrolling === false && e.cancelable) {\n            e.preventDefault();\n        }\n    };\n    var onPointerMove = function onPointerMove(e) {\n        if (!params.rotate || !self.isActive) return;\n        if (e.pointerType !== \"mouse\") {\n            if (!params.rotateTouch) return;\n            e.preventDefault();\n        }\n        var clientX = e.clientX, clientY = e.clientY;\n        var diffX = clientX - clientXStart;\n        var diffY = clientY - clientYStart;\n        if (typeof params.rotateTouch === \"string\" && (diffX !== 0 || diffY !== 0) && typeof isScrolling === \"undefined\") {\n            if (diffX * diffX + diffY * diffY >= 25) {\n                var touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n                isScrolling = params.rotateTouch === \"scroll-y\" ? touchAngle > 45 : 90 - touchAngle > 45;\n            }\n            if (isScrolling === false) {\n                el.classList.add(\"atropos-rotate-touch\");\n                if (e.cancelable) {\n                    e.preventDefault();\n                }\n            }\n        }\n        if (e.pointerType !== \"mouse\" && isScrolling) {\n            return;\n        }\n        setElements(clientX, clientY);\n    };\n    var onPointerLeave = function onPointerLeave(e) {\n        elBoundingClientRect = undefined;\n        eventsElBoundingClientRect = undefined;\n        if (!self.isActive) return;\n        if (e && e.type === \"pointerup\" && e.pointerType === \"mouse\") return;\n        if (e && e.type === \"pointerleave\" && e.pointerType !== \"mouse\") return;\n        if (typeof params.rotateTouch === \"string\" && isScrolling) {\n            el.classList.remove(\"atropos-rotate-touch\");\n        }\n        if (params.alwaysActive) {\n            setElements();\n            if (typeof params.onRotate === \"function\") params.onRotate(0, 0);\n            if (typeof params.onLeave === \"function\") params.onLeave();\n            return;\n        }\n        queue.push(function() {\n            return el.classList.remove(\"atropos-active\");\n        });\n        $setDuration(scaleEl, params.duration + \"ms\");\n        $setEasing(scaleEl, \"\");\n        $setTransform(scaleEl, \"translate3d(0,0, \" + 0 + \"px)\");\n        if (shadowEl) {\n            $setDuration(shadowEl, params.duration + \"ms\");\n            $setEasing(shadowEl, \"\");\n        }\n        if (highlightEl) {\n            $setDuration(highlightEl, params.duration + \"ms\");\n            $setEasing(highlightEl, \"\");\n            $setTransform(highlightEl, \"translate3d(0, 0, 0)\");\n            $setOpacity(highlightEl, 0);\n        }\n        $setDuration(rotateEl, params.duration + \"ms\");\n        $setEasing(rotateEl, \"\");\n        $setTransform(rotateEl, \"translate3d(0,0,0) rotateX(0deg) rotateY(0deg)\");\n        setChildrenOffset({\n            duration: params.duration + \"ms\"\n        });\n        self.isActive = false;\n        if (typeof params.onRotate === \"function\") params.onRotate(0, 0);\n        if (typeof params.onLeave === \"function\") params.onLeave();\n    };\n    var onDocumentClick = function onDocumentClick(e) {\n        var clickTarget = e.target;\n        if (!eventsEl.contains(clickTarget) && clickTarget !== eventsEl && self.isActive) {\n            onPointerLeave();\n        }\n    };\n    var initDOM = function initDOM() {\n        if (typeof el === \"string\") {\n            el = $(document, el);\n        }\n        if (!el) return;\n        // eslint-disable-next-line\n        if (el.__atropos__) return;\n        if (typeof eventsEl !== \"undefined\") {\n            if (typeof eventsEl === \"string\") {\n                eventsEl = $(document, eventsEl);\n            }\n        } else {\n            eventsEl = el;\n        }\n        childrenRootEl = isComponent ? el.parentNode.host : el;\n        Object.assign(self, {\n            el: el\n        });\n        rotateEl = $(el, \".atropos-rotate\");\n        scaleEl = $(el, \".atropos-scale\");\n        innerEl = $(el, \".atropos-inner\");\n        // eslint-disable-next-line\n        el.__atropos__ = self;\n    };\n    var init = function init() {\n        initDOM();\n        if (!el || !eventsEl) return;\n        if (params.shadow) {\n            createShadow();\n        }\n        if (params.highlight) {\n            createHighlight();\n        }\n        if (params.rotateTouch) {\n            if (typeof params.rotateTouch === \"string\") {\n                el.classList.add(\"atropos-rotate-touch-\" + params.rotateTouch);\n            } else {\n                el.classList.add(\"atropos-rotate-touch\");\n            }\n        }\n        if ($(childrenRootEl, \"[data-atropos-opacity]\")) {\n            setChildrenOffset({\n                opacityOnly: true\n            });\n        }\n        $on(document, \"click\", onDocumentClick);\n        $on(eventsEl, \"pointerdown\", onPointerEnter);\n        $on(eventsEl, \"pointerenter\", onPointerEnter);\n        $on(eventsEl, \"pointermove\", onPointerMove);\n        $on(eventsEl, \"touchmove\", onTouchMove);\n        $on(eventsEl, \"pointerleave\", onPointerLeave);\n        $on(eventsEl, \"pointerup\", onPointerLeave);\n        $on(eventsEl, \"lostpointercapture\", onPointerLeave);\n        if (params.alwaysActive) {\n            activate();\n            setElements();\n        }\n    };\n    var destroy = function destroy() {\n        self.destroyed = true;\n        cancelAnimationFrame(queueFrameId);\n        $off(document, \"click\", onDocumentClick);\n        $off(eventsEl, \"pointerdown\", onPointerEnter);\n        $off(eventsEl, \"pointerenter\", onPointerEnter);\n        $off(eventsEl, \"pointermove\", onPointerMove);\n        $off(eventsEl, \"touchmove\", onTouchMove);\n        $off(eventsEl, \"pointerleave\", onPointerLeave);\n        $off(eventsEl, \"pointerup\", onPointerLeave);\n        $off(eventsEl, \"lostpointercapture\", onPointerLeave);\n        // eslint-disable-next-line\n        delete el.__atropos__;\n    };\n    self.destroy = destroy;\n    init();\n    // eslint-disable-next-line\n    return self;\n}\n //# sourceMappingURL=atropos.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/atropos/atropos.mjs\n");

/***/ })

};
;